#+title: Dummett Library
#+author: Andrew Parisi

We all have had a quote from Dummett's writings on our mind before, but can't remember where h wrote it. The Dummett Library is the solution to that problem. This library lets users search for text in Dummett's writings. It returns the top matches for the search along with some context around the matched quote.

* Development
** Getting Started
*** Backend (Clojure)
To start a repl call

#+BEGIN_SRC bash
  clj -M:dev/repl
#+END_SRC

Once in a repl switch to the core namespace and load it up

#+BEGIN_SRC clojure
  (do
    (ns dummett-library.core)
    (use 'dummett-library.core :reload))
#+END_SRC

In order to reindex the sample library call

#+BEGIN_SRC clojure
  (reindex-dev!)
#+END_SRC

Finally, run a query for "Frege" with

#+BEGIN_SRC clojure
  (query "Frege")
#+END_SRC

To set up the backend http server call

#+BEGIN_SRC clojure
(run!)
#+END_SRC

*** Frontend (Clojurescript)

Open a separate terminal window. To install the node dependencies call

#+BEGIN_SRC sh
  npm install --save-dev shadow-cljs
  npm install react react-dom create-react-class
#+END_SRC

To run the frontend call
#+BEGIN_SRC sh
shadow-cljs watch app
#+END_SRC

When you see
#+BEGIN_SRC sh
[:app] Configuring build.
[:app] Compiling ...
[:app] Build completed. (247 files, 246 compiled, 0 warnings, 16.45s)
#+END_SRC
or something like it the app is ready to visit. It is served on [[http://localhost:8700]]

* Running

All the above services are dockerized and can be coordinated as a single endpoint on your machine using nginx. This can all be orchestrated with the =docker-compose.yml= file in this directory. To build the app run

#+BEGIN_SRC sh 
docker compose build 
#+END_SRC

where =$DUMMET_SERVER= and =$INDEX_LOCATION= are set by the =.envrc= file in this directory. To run the app call

#+BEGIN_SRC sh up
docker compose up
#+END_SRC

